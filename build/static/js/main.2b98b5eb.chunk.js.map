{"version":3,"sources":["logo.svg","components/Track.jsx","FavService.jsx","components/Home.jsx","components/Favorites.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Track","props","music","favBtnClass","isFavorite","className","style","flex","src","album","cover","alt","title","artist","name","preview","controls","href","onClick","event","preventDefault","onFavClick","getFavoritesFromStorage","JSON","parse","window","localStorage","getItem","Boolean","this","find","f","id","toggleFavorite","removeFavoriteFromStorage","addFavoriteToStorage","favorites","push","setItem","stringify","musicIndex","findIndex","splice","Home","useState","setTitle","orderBy","setOrderBy","musics","setMusics","onFavorites","FavService","onSubmit","encodedTitle","encodeURIComponent","fetchJsonp","then","res","json","data","htmlFor","type","placeholder","onChange","target","value","map","key","Favorites","App","logo","width","to","path","component","exact","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2b98b5eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nfunction Track(props) {\n\n    const music = props.music;\n    const isFavorite = props.isFavorite;\n    const favBtnClass = isFavorite ? 'btn-outline-danger' : 'btn-danger';\n\n    function onFavClick(music) {\n        return (event) => {\n            event.preventDefault();\n            props.onClick(music);\n        }\n    }\n\n    return (\n        \n        \n            <div className=\"card w-50\" style={{flex: 'initial'}}>\n                <div className=\"card-body text-left\">\n                    <div className=\"media mb-2\">\n                        <img className=\"align-self-center mr-2 w-25\"\n                            src={music.album.cover} alt=\"\" />\n                        <div className=\"media-body\">\n                            <h5 className=\"card-title\">{music.title}</h5>\n        <h6 className=\"card-subtitle mb-2 text-muted\">{music.artist.name}/{music.album.title}</h6>\n                        </div>\n                    </div>\n                    <audio src={music.preview} className=\"w-100\" controls></audio><br />\n                    <a href=\"#\"  onClick={onFavClick(music)}  className={'btn btn-sm btn-danger ' + favBtnClass}>\n                       <> <i className=\"fas fa-heart\"></i></>\n                        Ajouter aux favoris</a>\n                        <><i className=\"fas fa-heart-broken\"></i> Retirer aux favoris</>\n    \n                </div>\n            </div>\n        \n\n    );\n}\n\nexport default Track;","const STORAGE_FAVORITE_KEY = 'deezweb.favorites'\n\nexport default {\n   // Retourne les favoris du localStorage du navigateur\n   getFavoritesFromStorage() {\n        return JSON.parse(window.localStorage.getItem(STORAGE_FAVORITE_KEY)) || []\n   },\n\n   // Vérifie si une musique se trouve dans les favoris\n   isFavorite(music) {\n        return Boolean(this.getFavoritesFromStorage().find(f => f.id === music.id))\n   },\n\n   // Permet d'ajouter/supprimer un favori du localStorage\n   toggleFavorite(music) {\n    if (this.isFavorite(music)) {\n        this.removeFavoriteFromStorage(music)\n    } else {\n        this.addFavoriteToStorage(music)\n    }\n\n   },\n  \n   // Ajoute un favori au localStorage\n   addFavoriteToStorage(music) {\n        const favorites = this.getFavoritesFromStorage()\n        favorites.push(music)\n        window.localStorage.setItem(STORAGE_FAVORITE_KEY, JSON.stringify(favorites))\n \n   },\n  \n   // Supprime un favori du localStorage\n   removeFavoriteFromStorage(music) {\n    const favorites = this.getFavoritesFromStorage()\n    const musicIndex = favorites.findIndex(f => f.id === music.id)\n    favorites.splice(musicIndex, 1)\n    window.localStorage.setItem(STORAGE_FAVORITE_KEY, JSON.stringify(favorites))\n \n   }\n}\n","// import React from 'react';\nimport React, {useState}from 'react';\nimport fetchJsonp from 'fetch-jsonp';\nimport Track from './Track';\nimport FavService from '../FavService'\n\nfunction Home(props) {\n\nconst [title,\nsetTitle]=useState('');\nconst [orderBy,\nsetOrderBy]=useState('ALBUM_ASC');\nconst [musics,\nsetMusics]=useState([]);\n\nfunction changeTitle(event) {\nsetTitle(event.target.value);\n}\n\nfunction changeOrder(event) {\nsetOrderBy(event.target.value);\n}\n\nfunction changeMusic(event) {\nsetMusics(event.target.value);\n}\n\nfunction onSearch(event) {\n    event.preventDefault(); // Empêche le navigateur de recharger la page\n    const encodedTitle = encodeURIComponent(title);\n    fetchJsonp(\n`https://api.deezer.com/search?q=${encodedTitle}&order=${orderBy}&output=jsonp`\n    )\n    .then(res => res.json())\n    .then(data => data.data)\n    .then(musics => {\n        setMusics(musics);\n    });\n}\n\nfunction onFavorites(music) {\n    FavService.toggleFavorite(music);\n    setMusics([...musics]);\n}\n\n\nreturn (<main className=\"container mt-3\">\n    <h1>Recherche</h1>\n    <p>Recherchez un titre sur Deezer en utilisant le formulaire suivant :</p>\n    <hr />\n    <form onSubmit={ onSearch }>\n        <div className=\"row\"> <label htmlFor=\"searchText\" className=\"col-sm-2 col-form-label text-right\">Titre&nbsp;\n                :</label>\n            <div className=\"col-sm-4\"> <input type=\"text\" className=\"form-control\" id=\"searchText\"\n                    placeholder=\"Eminem, Armin Van Buuren, Rihanna, ...\" onChange={ changeTitle } /> </div> <label\n                htmlFor=\"searchText\" className=\"col-sm-2 col-form-label text-right\">Trier par :</label>\n            <div className=\"col-sm-2\"> <select id=\"order\" className=\"custom-select\" onChange={ changeOrder }>\n                    <option value=\"ALBUM_ASC\">Album</option>\n                    <option value=\"ARTIST_ASC\">Artiste</option>\n                    <option value=\"TRACK_ASC\">Musique</option>\n                    <option value=\"RANKING\">Les plus populaires</option>\n                    <option value=\"RATING_ASC\">Les mieux notés</option>\n                </select> </div>\n            <div className=\"col-sm-2 text-right\"> <input type=\"submit\" className=\"btn btn-primary\" value=\"Go\" /> </div>\n        </div>\n    </form>\n    <hr /> {\n    /* <h3>Aucun résultat pour cette recherche ...</h3> */\n    }\n\n    <h2>Résultats</h2>\n    <div className=\"card-group search-results\"> {\n        musics.map(music => {\n        return (\n            <Track key={music.id} music={music} onClick={onFavorites} isFavorite={FavService.isFavorite(music)} />\n        );\n        })}\n    </div>\n</main>);\n}\n\nexport default Home;","import React, {useState} from 'react';\nimport FavService from '../FavService';\nimport Track from './Track';\n\n\n\n\nfunction Favorites(props) {\n    \n    const [musics, setMusics] = useState(FavService.getFavoritesFromStorage());\n    \n    function onFavorites(music) {\n        FavService.toggleFavorite(music);\n        setMusics(FavService.getFavoritesFromStorage());\n    }\n    \nreturn (\n<main className=\"container mt-3\">\n        <h1>Mes favoris</h1>\n        <p>Liste de mes titres favoris</p>\n        <hr />\n \n        {musics.map(music => (\n            <Track\n                key={music.id}\n                music={music}\n                onClick={onFavorites}\n                isFavorite={FavService.isFavorite(music)}\n            />\n        ))}\n    </main>\n\n);\n}\n\nexport default Favorites;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home'\nimport Favorites from './components/Favorites';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\nfunction App() {\nreturn (\n<Router>\n<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <div className=\"container\">\n    <span className=\"navbar-brand mb-0 h1\">\n      <img src={logo} alt=\"React Logo\" width=\"42\" /> Deezweb\n    </span>\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item active\">\n        <Link to=\"/deezapp\" className=\"nav-link\">\n           <i className=\"fas fa-search\"></i> Rechercher un titre\n        </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/deezapp/favorites\" className=\"nav-link\">\n             <i className=\"fas fa-heartbeat\"></i> Mes favoris\n          </Link>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n  <Route path=\"/deezapp\" component={Home} exact />\n  <Route path=\"/deezapp/favorites\" component={Favorites} />\n</Router>\n);\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}